{"version":3,"file":"static/js/165.81cc76d9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactsForm/Contacts.module.css?6f7d","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/Pages/Contacts/Contacts.module.css?47f7","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.js","Pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport css from './Contacts.module.css';\nimport { getContacts } from 'redux/contacts/selectors';\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const tagName = event.target.name;\n    const inputValue = event.target.value;\n\n    switch (tagName) {\n      case 'name':\n        setName(inputValue);\n        break;\n      case 'number':\n        setNumber(inputValue);\n        break;\n      default:\n        return;\n    }\n  };\n  const addContact = evt => {\n    evt.preventDefault();\n    contacts.find(e => e.name === name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={addContact} className={css.form}>\n      <label className={css.label}>\n        Name:\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number:\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { setFilter } from 'redux/contacts/filter';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        onChange={e => dispatch(setFilter(e.currentTarget.value.toLowerCase()))}\n      />\n    </div>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Contacts_form__j2kx+\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__3daws\",\"btn\":\"ContactList_btn__QQhmE\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\nexport default function ContactList(\n  {\n    contacts,\n  }\n) {\n\n  const dispatch = useDispatch()\n  return (\n    <ul>\n      {contacts.map(e => (\n        <li className={css.list} key={e.id} id={e.id}>\n          <p>\n            {e.name} : {e.number}\n          </p>\n          <button className={css.btn} onClick={() =>\n            dispatch(deleteContact(e.id))\n          }>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })).isRequired,\n};","import ContactForm from \"components/ContactsForm/ContactsForm\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Filter from \"../../components/Filter/Filter\";\nimport { currentContact } from \"redux/contacts/operations\";\nimport { getContacts, getError, getFilter, getIsLoading } from \"redux/contacts/selectors\";\nimport css from './Contacts.module.css'\nimport { PulseLoader } from 'react-spinners';\nimport ContactList from \"components/ContactsList/ContactsList\";\nconst override = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translateX(-50%) translateY(-50%)',\n};\n\nexport default function Contacts() {\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(currentContact());\n    }, [dispatch]);\n\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n    const filteredContacts = () => {\n        if (filter) {\n            return contacts.filter(i =>\n                i.name.toLowerCase().includes(filter.toLowerCase())\n            );\n        }\n        return contacts;\n    };\n\n    const result = filteredContacts();\n    return (\n        <div className={css.form}>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading && <PulseLoader color=\"#9789c1\" cssOverride={override} />}\n            {error && <b style={{ color: 'red', textAlign: 'center' }}>{error}</b>}\n            <ContactList contacts={result} />\n        </div>\n    )\n}"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","tagName","target","inputValue","value","onSubmit","evt","preventDefault","find","e","alert","addContacts","className","css","type","pattern","title","required","onChange","setFilter","currentTarget","toLowerCase","ContactList","map","id","onClick","deleteContact","override","position","top","left","transform","Contacts","useEffect","currentContact","result","i","includes","PulseLoader","color","cssOverride","style","textAlign"],"sourceRoot":""}